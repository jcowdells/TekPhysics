How 2 collide stuff:

KEY AREA 1
OBB calcOBB(std::vector<Polygon>)
- calculate OBB that best surrounds a set of polygons.
    - get a list of triangles for the set of polygons
    - using convex hull
    - calculate mean = (1/6n) * SUM(i=1->n, (1/Si)(Ai + Bi + Ci)) e.g. the mean of centroids
    - Si = area of triangle i = 0.5 * (a - b) X (c - b)
    - calculate covariance of convex hull
    - https://www.cs.unc.edu/techreports/96-013.pdf page 8
    - take three eigenvectors of matrix
    - project points onto eigenvectors
    - find maximum/minimum points on each eigenvector
    - use these to determine extends of the BOX

KEY AREA 2
std::vector<std::vector<Polygon>> dividePolygons(std::vector<Polygon>)
- method to divide a set of polygons roughly in half.
    - create OBB
    - split down the longest divisible axis and create two new OBBs.
    - repeat until indivisible.

KEY AREA 3
- check for OBB collision using SAT or whatever